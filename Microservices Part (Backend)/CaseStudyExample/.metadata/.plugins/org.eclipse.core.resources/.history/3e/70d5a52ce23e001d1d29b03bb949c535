package com.customer.controller;

import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.customer.model.Customer;
import com.customer.repository.CustomerRepository;
import com.order.model.Orders;

@RestController
@CrossOrigin(origins="https://localhost:8080")
public class CustomerController {
	
	Optional<Customer> c1;
	
	@Autowired
	private CustomerRepository crepository;
	
	@GetMapping("/customer")
	public List<Customer> getAllCustomers(){
		return crepository.findAll();
	}
	
	@GetMapping("/customers/{id}")
	public ResponseEntity getCustomerById(@PathVariable(value = "id") String cust_name) {
		c1 = crepository.findById((String) cust_name);
		return ResponseEntity.ok().body(c1);
	}
	
	@PostMapping(value = "/customers")
	public Customer saveOrder(@RequestBody Customer cust) {
		return crepository.save(cust);
	}
	
    @PutMapping(value="/customers/{id}")
    public ResponseEntity updateOrder (@PathVariable(value="id") Long order_id,
    @Validated @RequestBody Customer odata){
        c1 = crepository.findByName(cust_name);
       Orders o2 = o1.get();
        o2.setOrder_id(odata.getOrder_id());
        o2.setProd_id(odata.getProd_id());
        o2.setPayment(odata.getPayment());
        o2.setOrder_status(odata.getOrder_status());
        
       Orders updateOrder = orepository.save(o2);
        return ResponseEntity.ok(updateOrder);
    } 
	
    
    @DeleteMapping(value="/orders/{id}")
    public ResponseEntity deleteOrder
    (@PathVariable(value="id")Long order_id) {
    	orepository.deleteById(order_id);
    	return ResponseEntity.noContent().build();
    }
	
}