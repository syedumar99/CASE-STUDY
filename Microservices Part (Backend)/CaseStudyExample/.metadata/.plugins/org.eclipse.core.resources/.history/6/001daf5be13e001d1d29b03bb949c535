package com.customer.controller;

import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.customer.model.Customer;
import com.customer.repository.CustomerRepository;

@RestController
@CrossOrigin(origins="https://localhost:8080")
public class CustomerController {
	
	Optional<Customer> p1;
	
	@Autowired
	private CustomerRepository prepository;
	
	@GetMapping("/customer")
	public List<Customer> getAllCustomers(){
		return prepository.findAll();
	}
	
	@GetMapping("/customers/{id}")
	public ResponseEntity getCustomerById(@PathVariable(value = "id") String cust_name) {
		p1 = prepository.findById((String) cust_name);
		return ResponseEntity.ok().body(p1);
	}
	
	/*@PostMapping(value = "/products")
	public Customer saveProducts(@RequestBody Customer prod) {
		return prepository.save(prod);
	}
	
    @PutMapping(value="/products/{id}")
    public ResponseEntity updateProducts (@PathVariable(value="id") Long prod_id,
    @Valid @RequestBody Customer pdata){
        p1 = prepository.findById(prod_id);
        Customer p2 = p1.get();
        p2.setCust_name(pdata.getCust_name());
        p2.setCust_phoneno(pdata.getCust_phoneno());
        p2.setCust_email(pdata.getCust_email());
        p2.setCust_address(pdata.getCust_address());
        
        
       Customer updateProducts = prepository.save(p2);
        return ResponseEntity.ok(updateProducts);
    } 
	
    
    @DeleteMapping(value="/products/{id}")
    public ResponseEntity deleteProducts(@PathVariable(value="id")Long prod_id) {
    	prepository.deleteById(prod_id);
    	return ResponseEntity.noContent().build();
    }*/
	
}
