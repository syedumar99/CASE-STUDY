package com.customer.controller;

import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.customer.model.Customer;
import com.customer.repository.CustomerRepository;


@RestController
@CrossOrigin(origins="https://localhost:8080")
public class CustomerController {
	
	Optional<Customer> c1;
	
	@Autowired
	private CustomerRepository crepository;
	
	@GetMapping("/customer")
	public List<Customer> getAllCustomers(){
		return crepository.findAll();
	}
	
	@GetMapping("/customers/{id}")
	public ResponseEntity getCustomerById(@PathVariable(value = "id") String cust_name) {
		c1 = crepository.findByName((String) cust_name);
		return ResponseEntity.ok().body(c1);
	}
	
	@PostMapping(value = "/customers")
	public Customer saveOrder(@RequestBody Customer cust) {
		return crepository.save(cust);
	}
	
    @PutMapping(value="/customers/{id}")
    public ResponseEntity updateOrder (@PathVariable(value="id") Long cust_name,
    @Validated @RequestBody Customer odata){
        c1 = crepository.findByName(cust_name);
        Customer c2 = c1.get();
        c2.setCust_name(odata.getCust_name());
        c2.setCust_phoneno(odata.getCust_phoneno());
        c2.setCust_email(odata.getCust_email());
        c2.setCust_address(odata.getCust_address());
        
       Customer updateOrder = crepository.save(c2);
        return ResponseEntity.ok(updateOrder);
    } 
	
    
    @DeleteMapping(value="/orders/{id}")
    public ResponseEntity deleteOrder
    (@PathVariable(value="id")Iterable<Customer> cust_name) {
    	crepository.deleteAllInBatch(cust_name);
    	return ResponseEntity.noContent().build();
    }
	
}